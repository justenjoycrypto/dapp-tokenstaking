{
  "contractName": "ERC20StakingRewardsDistributionFuzzer",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "AssertionFailed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"AssertionFailed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/luzzif/Projects/swapr-lp-staker/contracts/fuzzing/ERC20StakingRewardsDistributionFuzzer.sol\":\"ERC20StakingRewardsDistributionFuzzer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/luzzif/Projects/swapr-lp-staker/contracts/ERC20StakingRewardsDistribution.sol\":{\"keccak256\":\"0x4acdc2af1d5e0737ef20f5d42834f1d94c8711a8c0f8b80e8135e1e92bcd93e0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://91aef136cc4e050366adcb73f8738657979b8795e81dcab23099d318f35903c0\",\"dweb:/ipfs/QmW4g1aPrB83LPaxQMciybLPLkBLQygyFauafDD2LhkEj6\"]},\"/home/luzzif/Projects/swapr-lp-staker/contracts/ERC20StakingRewardsDistributionFactory.sol\":{\"keccak256\":\"0xf0e4b7e9355fee0b2ff478ac48f5de9f14901d88fe3c2aff54294183ea72c337\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://673d5543c4850d0c324182e169b8134c5d3ff6b03dfa6e09f5bab9d97dbad11c\",\"dweb:/ipfs/QmQanp1uZ7ED8XgPSdkM1HoMYoej77VmCCxjoxZPpSPxNs\"]},\"/home/luzzif/Projects/swapr-lp-staker/contracts/fuzzing/ERC20StakingRewardsDistributionFuzzer.sol\":{\"keccak256\":\"0x3c98891dc4022a57ffb7771277fe41c896edbad94348ccfa33e79ed73cb78e4f\",\"urls\":[\"bzz-raw://a52bd1891e068dbd1a835dcbff5750275f6387a5fc8b98fbc3332bf607dd3858\",\"dweb:/ipfs/QmaUnzUhsNWvbJTSN6Xo1TQbDHryydvNP39p4M6nXwY49C\"]},\"/home/luzzif/Projects/swapr-lp-staker/contracts/interfaces/IERC20StakingRewardsDistribution.sol\":{\"keccak256\":\"0x0181a46cc4e3569023b44e22b2ea373a3cdfbd8f75d2ed41b5a03a9c11b22f5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c2600081682d9981833c263dc3024ca56ec43cc8a6d10e3ee6c2baf65f7f8c23\",\"dweb:/ipfs/QmURuZsc6xNRV3X8CytFMDr5axkKrnwgTDpJEoj4Tc6CvD\"]},\"/home/luzzif/Projects/swapr-lp-staker/contracts/interfaces/IERC20StakingRewardsDistributionFactory.sol\":{\"keccak256\":\"0x9cbce410c98fca1e70fa2b2f9d61b3e65329446551ec38d832f585336568832c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f33aff6ad0ddd4ffadb8ceca43c8e75d75ad942167cc3795e3a8037f40152618\",\"dweb:/ipfs/QmQxbAGak8yWd53uaWXk2iXgeG6xadYZhB52LuoYvxTp3e\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x90dec20805396efc780a82c62578626103e03278bc1f48b61bb3aba52a61617c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7e3316ef22eaaac081ea90b12c0ae9f831fea5a70c78ca541ce3332e8b77f47\",\"dweb:/ipfs/QmTxLzG9UKK1fsAYoS3QgGgsCAHyW67D8mjPPHafczs2Co\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1477864def7febd9826918e50482a1ee7068b337b03804a7e0e98c674ac57c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bdd8ea2ace1bf716007318f8aca21d32384f0b8b295adac55147270767441fa\",\"dweb:/ipfs/QmSv235N45Ub3wFXdTLNiS3k4b7FAudtEL8s6g1PwcsCcS\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a694fc3a14610030575b600080fd5b61004361003e366004610471565b610045565b005b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561008e57600080fd5b505afa1580156100a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c6919061048a565b905060008060009054906101000a90046001600160a01b03166001600160a01b031663b41fa9796040518163ffffffff1660e01b815260040160206040518083038186803b15801561011757600080fd5b505afa15801561012b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014f919061048a565b60008054604051632ac2353f60e21b815230600482015292935090916001600160a01b039091169063ab08d4fc9060240160206040518083038186803b15801561019857600080fd5b505afa1580156101ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d0919061048a565b60005460405163534a7e1d60e11b8152600481018790529192506001600160a01b03169063a694fc3a90602401600060405180830381600087803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b5050600480546040516370a0823160e01b81523092810192909252600093506001600160a01b031691506370a082319060240160206040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae919061048a565b905060008060009054906101000a90046001600160a01b03166001600160a01b031663b41fa9796040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ff57600080fd5b505afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610337919061048a565b60008054604051632ac2353f60e21b815230600482015292935090916001600160a01b039091169063ab08d4fc9060240160206040518083038186803b15801561038057600080fd5b505afa158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b8919061048a565b9050826103c588886104bb565b146103f4576040517ff92d4a94d1d5014696dcfc65a0a061af97608eebd7fea0519ff4fdbca71bae9f90600090a15b816103ff88876104a3565b1461042e576040517ff92d4a94d1d5014696dcfc65a0a061af97608eebd7fea0519ff4fdbca71bae9f90600090a15b8061043988866104a3565b14610468576040517ff92d4a94d1d5014696dcfc65a0a061af97608eebd7fea0519ff4fdbca71bae9f90600090a15b50505050505050565b60006020828403121561048357600080fd5b5035919050565b60006020828403121561049c57600080fd5b5051919050565b600082198211156104b6576104b66104d2565b500190565b6000828210156104cd576104cd6104d2565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205d69c47c79011e523661f42720681b6415c161238c9338d4c3436833d838519964736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6425:23",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:23",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:23"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:23"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:23"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:23"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:23"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:23",
                "type": ""
              }
            ],
            "src": "14:277:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "418:209:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "464:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "473:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "476:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "466:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "466:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "466:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "439:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "448:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "435:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "435:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "460:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "431:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "428:52:23"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "489:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "508:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:16:23"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "493:5:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "581:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "590:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "583:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "583:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "583:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "540:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "551:5:23"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "566:3:23",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "571:1:23",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "562:3:23"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "562:11:23"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "575:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "558:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "558:19:23"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "547:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "547:31:23"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "537:2:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "537:42:23"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "530:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "530:50:23"
                  },
                  "nodeType": "YulIf",
                  "src": "527:70:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "606:15:23",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "616:5:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "606:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20StakingRewardsDistribution_$2355_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "384:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "395:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "407:6:23",
                "type": ""
              }
            ],
            "src": "296:331:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "676:60:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "693:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "702:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "717:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "722:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "713:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "713:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "726:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "709:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "709:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "698:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "698:31:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "686:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "686:44:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "686:44:23"
                }
              ]
            },
            "name": "abi_encode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "660:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "667:3:23",
                "type": ""
              }
            ],
            "src": "632:104:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "802:374:23",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "812:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "832:5:23"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "826:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:12:23"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "816:6:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "854:3:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "859:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "847:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:19:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "847:19:23"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "875:14:23",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "885:4:23",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "879:2:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "898:19:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "909:3:23"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "914:2:23"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "905:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:12:23"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "898:3:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "926:28:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "944:5:23"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "951:2:23"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "940:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "940:14:23"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "930:6:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "963:10:23",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "972:1:23",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "967:1:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1031:120:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1052:3:23"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1063:6:23"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1057:5:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1057:13:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1045:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1045:26:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1045:26:23"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1084:19:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1095:3:23"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1100:2:23"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1091:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1091:12:23"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1084:3:23"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1116:25:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1130:6:23"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1138:2:23"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1126:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1126:15:23"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1116:6:23"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "993:1:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "996:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "990:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "990:13:23"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1004:18:23",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1006:14:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1015:1:23"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1018:1:23",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1011:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1011:9:23"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1006:1:23"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "986:3:23",
                    "statements": []
                  },
                  "src": "982:169:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1160:10:23",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1167:3:23"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1160:3:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_array_uint256_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "779:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "786:3:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "794:3:23",
                "type": ""
              }
            ],
            "src": "741:435:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1222:50:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1239:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1258:5:23"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1251:6:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1251:13:23"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1244:6:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1244:21:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1232:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1232:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1232:34:23"
                }
              ]
            },
            "name": "abi_encode_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1206:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1213:3:23",
                "type": ""
              }
            ],
            "src": "1181:91:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1320:59:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1337:3:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1346:5:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1361:2:23",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1365:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1357:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1357:10:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1369:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1353:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1353:18:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1342:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1342:30:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1330:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1330:43:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1330:43:23"
                }
              ]
            },
            "name": "abi_encode_uint64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1304:5:23",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1311:3:23",
                "type": ""
              }
            ],
            "src": "1277:102:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1485:102:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1495:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1507:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1518:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1503:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1503:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1495:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1537:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1552:6:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1568:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1573:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1564:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1564:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1577:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1560:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1560:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1548:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1530:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:51:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1530:51:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1454:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:23",
                "type": ""
              }
            ],
            "src": "1384:203:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1721:175:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1731:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1743:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1739:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1739:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1731:4:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1766:29:23",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1784:3:23",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1789:1:23",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1780:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1780:11:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1793:1:23",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1776:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:19:23"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1770:2:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1811:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1826:6:23"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1834:2:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1822:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1822:15:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1804:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1804:34:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1858:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1869:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1854:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1854:18:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1878:6:23"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1886:2:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1874:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1874:15:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1847:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:43:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:43:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1682:9:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1693:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1701:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1712:4:23",
                "type": ""
              }
            ],
            "src": "1592:304:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2060:145:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2070:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2082:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2093:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2078:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2078:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2070:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2112:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2127:6:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2143:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2148:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2139:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2139:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2152:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2135:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2135:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2123:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2123:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2105:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:51:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2105:51:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2176:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2187:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2172:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2172:18:23"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2192:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2165:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2165:34:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_10000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2021:9:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2032:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2040:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2051:4:23",
                "type": ""
              }
            ],
            "src": "1901:304:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2367:145:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2389:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2400:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2385:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2385:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2377:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2419:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2434:6:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2450:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2455:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2446:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2446:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2459:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2442:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2442:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2430:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2430:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2412:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2412:51:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2412:51:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2483:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2494:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2479:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2479:18:23"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2499:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:34:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_100000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2328:9:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2339:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2347:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2358:4:23",
                "type": ""
              }
            ],
            "src": "2210:302:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2646:145:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2656:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2668:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2679:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2664:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2664:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2656:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2698:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2713:6:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2729:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2734:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2725:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2725:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2738:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2721:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2721:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2709:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2709:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2691:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:51:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2691:51:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2762:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2773:2:23",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2758:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2758:18:23"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2778:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2751:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2751:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2751:34:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2607:9:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2618:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2626:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2637:4:23",
                "type": ""
              }
            ],
            "src": "2517:274:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3163:867:23",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3173:33:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3191:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3202:3:23",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3187:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3187:19:23"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3177:6:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3222:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3233:3:23",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3215:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3215:22:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3215:22:23"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3246:17:23",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "3257:6:23"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3250:3:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3272:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3292:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3286:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3286:13:23"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3276:6:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "3315:6:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3323:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3308:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3308:22:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3308:22:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3339:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3350:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:3:23",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3346:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3346:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3339:3:23"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3374:14:23",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3384:4:23",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3378:2:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3397:29:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3415:6:23"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3423:2:23"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3411:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:15:23"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3401:6:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3435:10:23",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3444:1:23",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3439:1:23",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3503:146:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3524:3:23"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3539:6:23"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3533:5:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3533:13:23"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3556:3:23",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3561:1:23",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "3552:3:23"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3552:11:23"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3565:1:23",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "3548:3:23"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3548:19:23"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "3529:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3529:39:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3517:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3517:52:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3517:52:23"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3582:19:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3593:3:23"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3598:2:23"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3589:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3589:12:23"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3582:3:23"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3614:25:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3628:6:23"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3636:2:23"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3624:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3624:15:23"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3614:6:23"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3465:1:23"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3468:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3462:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:13:23"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3476:18:23",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3478:14:23",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3487:1:23"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3490:1:23",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3483:3:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3483:9:23"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3478:1:23"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3458:3:23",
                    "statements": []
                  },
                  "src": "3454:195:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3677:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3689:9:23"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3700:2:23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3685:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3685:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3658:18:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3658:46:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3658:46:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3724:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3735:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3720:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3720:18:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3744:3:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3749:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3740:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3740:19:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3713:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3713:47:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3713:47:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3769:49:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3806:6:23"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3814:3:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_array_uint256_dyn",
                      "nodeType": "YulIdentifier",
                      "src": "3777:28:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3777:41:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3769:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3845:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3857:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3868:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3853:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3853:18:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "3827:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3827:45:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3827:45:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "3899:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3911:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3922:3:23",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3907:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3907:19:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_uint64",
                      "nodeType": "YulIdentifier",
                      "src": "3881:17:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3881:46:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3881:46:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "3952:6:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3964:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3975:3:23",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3960:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3960:19:23"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3936:15:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3936:44:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3936:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4000:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4011:3:23",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3996:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3996:19:23"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "4017:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3989:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3989:35:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3989:35:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_uint64_t_uint64_t_bool_t_rational_0_by_1__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_uint64_t_uint64_t_bool_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3084:9:23",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3095:6:23",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3103:6:23",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3111:6:23",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3119:6:23",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3127:6:23",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3135:6:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3143:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3154:4:23",
                "type": ""
              }
            ],
            "src": "2796:1234:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4144:76:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4154:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4166:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4177:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4162:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4162:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4154:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4196:9:23"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4207:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4189:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4189:25:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4189:25:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4113:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4124:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4135:4:23",
                "type": ""
              }
            ],
            "src": "4035:185:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4500:290:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4517:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4528:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4510:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4510:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4510:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4551:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4562:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4547:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4547:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4567:2:23",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4540:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4540:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4540:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4590:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4601:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4586:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4586:18:23"
                      },
                      {
                        "hexValue": "52657761726420746f6b656e2031",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4606:16:23",
                        "type": "",
                        "value": "Reward token 1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4579:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4579:44:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4579:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4643:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4654:4:23",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4639:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4639:20:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4661:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4632:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4632:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4685:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4696:3:23",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4681:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4681:19:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4702:1:23",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4674:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4674:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4724:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4735:3:23",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4720:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4720:19:23"
                      },
                      {
                        "hexValue": "52574431",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4741:6:23",
                        "type": "",
                        "value": "RWD1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4713:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4713:35:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4713:35:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4757:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4769:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4780:3:23",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4765:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4765:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4757:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8598c4ef96918db75f937e3d9a88defe3b5281980a270f97dbe764bb3157b6bf_t_stringliteral_d3210339f667b0153b5c49524d82b65737cc923df8553cc5676b275f2d3a5148__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4477:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4491:4:23",
                "type": ""
              }
            ],
            "src": "4225:565:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5070:290:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5087:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5098:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5080:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5080:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5080:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5121:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5132:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5117:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5117:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5137:2:23",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5110:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5110:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5110:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5160:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5171:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5156:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5156:18:23"
                      },
                      {
                        "hexValue": "52657761726420746f6b656e2032",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5176:16:23",
                        "type": "",
                        "value": "Reward token 2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5149:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5149:44:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5149:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5213:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5224:4:23",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5209:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5209:20:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5231:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5202:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5202:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5202:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5255:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5266:3:23",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5251:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5251:19:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5272:1:23",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5244:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5244:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5244:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5294:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5305:3:23",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5290:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5290:19:23"
                      },
                      {
                        "hexValue": "52574432",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5311:6:23",
                        "type": "",
                        "value": "RWD2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5283:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5283:35:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5283:35:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5327:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5339:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5350:3:23",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5335:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5335:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5327:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dc299454c8ac508cc9506c501fbe13f517b7f965d73086427acac9010bfa6cdd_t_stringliteral_92e74a57db7a2dbcb5212cdd216844b10c038fc9b00f7461adf60392a80ad811__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5047:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5061:4:23",
                "type": ""
              }
            ],
            "src": "4795:565:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5640:289:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5657:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5668:2:23",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5650:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5650:21:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5650:21:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5691:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5702:2:23",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5687:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5687:18:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5707:2:23",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5680:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5680:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5680:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5730:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5741:2:23",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5726:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5726:18:23"
                      },
                      {
                        "hexValue": "5374616b61626c6520746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5746:16:23",
                        "type": "",
                        "value": "Stakable token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5719:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5719:44:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5719:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5783:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5794:4:23",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5779:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5779:20:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5801:3:23",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5772:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5772:33:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5772:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5825:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5836:3:23",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5821:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5821:19:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5842:1:23",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5814:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:30:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5814:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5864:9:23"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5875:3:23",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5860:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5860:19:23"
                      },
                      {
                        "hexValue": "53544b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5881:5:23",
                        "type": "",
                        "value": "STK"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5853:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5853:34:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5853:34:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5896:27:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5908:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5919:3:23",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5904:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5904:19:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5896:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dccc6f2cfdcba874f07f9a42f708f30e9f8763ce31e28fd9acc8c69bbd78dd82_t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5617:9:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5631:4:23",
                "type": ""
              }
            ],
            "src": "5365:564:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5982:177:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6017:111:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6038:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6045:3:23",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6050:10:23",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6041:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6041:20:23"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6031:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6031:31:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6031:31:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6082:1:23",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6085:4:23",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6075:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6075:15:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6075:15:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6110:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6113:4:23",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6103:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6103:15:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6103:15:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5998:1:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6005:1:23"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6001:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6001:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5995:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5995:13:23"
                  },
                  "nodeType": "YulIf",
                  "src": "5992:136:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6137:16:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6148:1:23"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6151:1:23"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6144:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6144:9:23"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6137:3:23"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5965:1:23",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5968:1:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5974:3:23",
                "type": ""
              }
            ],
            "src": "5934:225:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6196:95:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6213:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6220:3:23",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6225:10:23",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6216:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6216:20:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6206:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6206:31:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6206:31:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6253:1:23",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6256:4:23",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6246:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6246:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6246:15:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6277:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6280:4:23",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6270:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6270:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6270:15:23"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6164:127:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6328:95:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6345:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6352:3:23",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6357:10:23",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6348:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6348:20:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6338:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6338:31:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6338:31:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6385:1:23",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6388:4:23",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6378:15:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6409:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6412:4:23",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6402:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6402:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6402:15:23"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "6296:127:23"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20StakingRewardsDistribution_$2355_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_uint64(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(64, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_rational_10000000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_rational_100000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_uint64_t_uint64_t_bool_t_rational_0_by_1__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_uint64_t_uint64_t_bool_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 224)\n        mstore(headStart, 224)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 256)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        abi_encode_address(value1, add(headStart, _1))\n        mstore(add(headStart, 64), sub(pos, headStart))\n        tail := abi_encode_array_uint256_dyn(value2, pos)\n        abi_encode_uint64(value3, add(headStart, 96))\n        abi_encode_uint64(value4, add(headStart, 128))\n        abi_encode_bool(value5, add(headStart, 160))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_8598c4ef96918db75f937e3d9a88defe3b5281980a270f97dbe764bb3157b6bf_t_stringliteral_d3210339f667b0153b5c49524d82b65737cc923df8553cc5676b275f2d3a5148__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Reward token 1\")\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 4)\n        mstore(add(headStart, 160), \"RWD1\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_dc299454c8ac508cc9506c501fbe13f517b7f965d73086427acac9010bfa6cdd_t_stringliteral_92e74a57db7a2dbcb5212cdd216844b10c038fc9b00f7461adf60392a80ad811__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Reward token 2\")\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 4)\n        mstore(add(headStart, 160), \"RWD2\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_dccc6f2cfdcba874f07f9a42f708f30e9f8763ce31e28fd9acc8c69bbd78dd82_t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 14)\n        mstore(add(headStart, 96), \"Stakable token\")\n        mstore(add(headStart, 0x20), 128)\n        mstore(add(headStart, 128), 3)\n        mstore(add(headStart, 160), \"STK\")\n        tail := add(headStart, 192)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1170:23",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:23",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:23",
                "type": ""
              }
            ],
            "src": "14:180:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "280:103:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "326:16:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "335:1:23",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "338:1:23",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "328:6:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "328:12:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "328:12:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "301:7:23"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "310:9:23"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "297:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "297:23:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "322:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "293:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "293:32:23"
                  },
                  "nodeType": "YulIf",
                  "src": "290:52:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "351:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "367:9:23"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "361:5:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:16:23"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "351:6:23"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "246:9:23",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "257:7:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "269:6:23",
                "type": ""
              }
            ],
            "src": "199:184:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "489:102:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "499:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "511:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "522:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "507:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "507:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "499:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "541:9:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "556:6:23"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "572:3:23",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "577:1:23",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "568:3:23"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "568:11:23"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "581:1:23",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "564:3:23"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "564:19:23"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "552:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "552:32:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "534:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "534:51:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "534:51:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "458:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "469:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "480:4:23",
                "type": ""
              }
            ],
            "src": "388:203:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "697:76:23",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "707:26:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "719:9:23"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "730:2:23",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "715:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "715:18:23"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "707:4:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "749:9:23"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "760:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:25:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "742:25:23"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "666:9:23",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "677:6:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "688:4:23",
                "type": ""
              }
            ],
            "src": "596:177:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "826:80:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "853:22:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "855:16:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "855:18:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "855:18:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "842:1:23"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "849:1:23"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "845:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "845:6:23"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "839:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:13:23"
                  },
                  "nodeType": "YulIf",
                  "src": "836:39:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "884:16:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "895:1:23"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "898:1:23"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "891:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:9:23"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "884:3:23"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "809:1:23",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "812:1:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "818:3:23",
                "type": ""
              }
            ],
            "src": "778:128:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "960:76:23",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "982:22:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "984:16:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:18:23"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "984:18:23"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "976:1:23"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "979:1:23"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "973:2:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:8:23"
                  },
                  "nodeType": "YulIf",
                  "src": "970:34:23"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1013:17:23",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1025:1:23"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1028:1:23"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1021:3:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:9:23"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "1013:4:23"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "942:1:23",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "945:1:23",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "951:4:23",
                "type": ""
              }
            ],
            "src": "911:125:23"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1073:95:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1097:3:23",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1102:10:23",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1093:3:23"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:20:23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:31:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1083:31:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1130:1:23",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1133:4:23",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1123:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1123:15:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1154:1:23",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1157:4:23",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1147:6:23"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1147:15:23"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1147:15:23"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1041:127:23"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 23,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1286:14831:2:-:0;;;1538:1488;;;;;;;;;;1577:35;;;;;:::i;:::-;4528:2:23;4510:21;;;4567:2;4547:18;;;4540:30;-1:-1:-1;;;4601:2:23;4586:18;;4579:44;4661:3;4654:4;4639:20;;4632:33;;;4702:1;4681:19;;;4674:30;-1:-1:-1;;;4735:3:23;4720:19;;4713:35;4780:3;4765:19;1577:35:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1562:12:2;:50;;-1:-1:-1;;;;;;1562:50:2;-1:-1:-1;;;;;1562:50:2;;;;;;;;;;1637:35;;;;;:::i;:::-;5098:2:23;5080:21;;;5137:2;5117:18;;;5110:30;-1:-1:-1;;;5171:2:23;5156:18;;5149:44;5231:3;5224:4;5209:20;;5202:33;;;5272:1;5251:19;;;5244:30;-1:-1:-1;;;5305:3:23;5290:19;;5283:35;5350:3;5335:19;1637:35:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1622:12:2;:50;;-1:-1:-1;;;;;;1622:50:2;-1:-1:-1;;;;;1622:50:2;;;;;;;;;;1698:34;;;;;:::i;:::-;5668:2:23;5650:21;;;5707:2;5687:18;;;5680:30;-1:-1:-1;;;5741:2:23;5726:18;;5719:44;5801:3;5794:4;5779:20;;5772:33;;;5842:1;5821:19;;;5814:30;-1:-1:-1;;;5875:3:23;5860:19;;5853:34;5919:3;5904:19;1698:34:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1682:13:2;:50;;-1:-1:-1;;;;;;1682:50:2;-1:-1:-1;;;;;1682:50:2;;;;;;;;;;1805:37;;-1:-1:-1;;1805:37:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1743:99;;1852:46;1981:15;1913:98;;;;;:::i;:::-;-1:-1:-1;;;;;1548:32:23;;;1530:51;;1518:2;1503:18;1913:98:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2056:16:2;;;2070:1;2056:16;;;;;;;;1852:159;;-1:-1:-1;2022:31:2;;2056:16;;;;;;;;;;;;-1:-1:-1;2056:16:2;2022:50;;2102:7;2082:14;2097:1;2082:17;;;;;;;;:::i;:::-;;;;;;:27;;;;;2139:7;2119:14;2134:1;2119:17;;;;;;;;:::i;:::-;;;;;;;;;;:27;2156:12;;2195:17;;-1:-1:-1;;;;;2156:12:2;;;;:20;;2185:7;;2195:14;;2156:12;;2195:17;;;;:::i;:::-;;;;;;;2156:57;;;;;;;;;;;;;;;-1:-1:-1;;;;;2123:32:23;;;;2105:51;;2187:2;2172:18;;2165:34;2093:2;2078:18;;1901:304;2156:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2223:12:2;;2262:17;;-1:-1:-1;;;;;2223:12:2;;;;:20;;2252:7;;2262:14;;2223:12;;2262:17;;;;;;:::i;:::-;;;;;;;2223:57;;;;;;;;;;;;;;;-1:-1:-1;;;;;2123:32:23;;;;2105:51;;2187:2;2172:18;;2165:34;2093:2;2078:18;;1901:304;2223:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2324:16:2;;;2338:1;2324:16;;;;;;;;2291:30;;2324:16;;;;;;;;-1:-1:-1;;2377:12:2;;2350:16;;;;-1:-1:-1;;;;;;2377:12:2;;2350:16;;-1:-1:-1;2377:12:2;;2350:16;;;;:::i;:::-;-1:-1:-1;;;;;2350:40:2;;;:16;;;;;;;;;:40;2427:12;;2400:16;;2427:12;;;2400:13;;2427:12;;2400:16;;;;;;:::i;:::-;-1:-1:-1;;;;;2400:40:2;;;:16;;;;;;;;;:40;2525:13;;2450:26;;;;;;2490:13;;2525;2553:14;2588:15;2625:23;2588:15;2643:5;2625:23;:::i;:::-;2663:5;2682:1;2450:243;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2772:24:2;;-1:-1:-1;;;2772:24:2;;2794:1;2772:24;;;4189:25:23;-1:-1:-1;;;;;2772:21:2;;;-1:-1:-1;2772:21:2;;-1:-1:-1;4162:18:23;;2772:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2704:12;:103;;-1:-1:-1;;;;;;2704:103:2;-1:-1:-1;;;;;2704:103:2;;;;;;;;;2817:13;;;:57;;-1:-1:-1;;;2817:57:2;;;;;2105:51:23;;;;2862:11:2;2172:18:23;;;2165:34;2817:13:2;;;:21;;2078:18:23;;2817:57:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2916:12:2;;2939:13;;2895:59;;-1:-1:-1;;;;;2916:12:2;;;;2939:13;;;;2895:59;;;:::i;:::-;-1:-1:-1;;;;;1822:15:23;;;1804:34;;1874:15;;1869:2;1854:18;;1847:43;1754:2;1739:18;2895:59:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2884:8:2;:70;;-1:-1:-1;;;;;;2884:70:2;-1:-1:-1;;;;;2884:70:2;;;;;;;;;2964:13;;;:55;;-1:-1:-1;;;2964:55:2;;;;;2105:51:23;;;;3006:12:2;2172:18:23;;;2165:34;2964:13:2;;;:22;;2078:18:23;;2964:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1552:1474;;;;1286:14831;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:277:23:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:23:o;296:331::-;407:6;460:2;448:9;439:7;435:23;431:32;428:52;;;476:1;473;466:12;428:52;502:16;;-1:-1:-1;;;;;547:31:23;;537:42;;527:70;;593:1;590;583:12;741:435;794:3;832:5;826:12;859:6;854:3;847:19;885:4;914:2;909:3;905:12;898:19;;951:2;944:5;940:14;972:1;982:169;996:6;993:1;990:13;982:169;;;1057:13;;1045:26;;1091:12;;;;1126:15;;;;1018:1;1011:9;982:169;;;-1:-1:-1;1167:3:23;;741:435;-1:-1:-1;;;;;741:435:23:o;2796:1234::-;3202:3;3215:22;;;3286:13;;3187:19;;;3308:22;;;3154:4;;3384;;3361:3;3346:19;;;3411:15;;;3154:4;3454:195;3468:6;3465:1;3462:13;3454:195;;;3533:13;;-1:-1:-1;;;;;3529:39:23;3517:52;;3589:12;;;;3624:15;;;;3565:1;3483:9;3454:195;;;-1:-1:-1;;;;;;;;698:31:23;;3685:18;;;686:44;3749:9;3744:3;3740:19;3735:2;3724:9;3720:18;3713:47;3777:41;3814:3;3806:6;3777:41;:::i;:::-;3769:49;;;;3827:45;3868:2;3857:9;3853:18;3845:6;-1:-1:-1;;;;;1342:30:23;1330:43;;1277:102;3827:45;-1:-1:-1;;;;;1342:30:23;;;;3922:3;3907:19;;1330:43;1251:13;;1244:21;3975:3;3960:19;;1232:34;4011:3;3996:19;;;3989:35;2796:1234;;-1:-1:-1;;;;2796:1234:23:o;5934:225::-;5974:3;6005:1;6001:6;5998:1;5995:13;5992:136;;;6050:10;6045:3;6041:20;6038:1;6031:31;6085:4;6082:1;6075:15;6113:4;6110:1;6103:15;5992:136;-1:-1:-1;6144:9:23;;5934:225::o;6164:127::-;6225:10;6220:3;6216:20;6213:1;6206:31;6256:4;6253:1;6246:15;6280:4;6277:1;6270:15;6296:127;1286:14831:2;;;;;;",
  "deployedSourceMap": "1286:14831:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3059:1097;;;;;;:::i;:::-;;:::i;:::-;;;3156:13;;;:38;;-1:-1:-1;;;3156:38:2;;3188:4;3156:38;;;534:51:23;;;;3108:33:2;;-1:-1:-1;;;;;3156:13:2;;;;:23;;507:18:23;;3156:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3108:86;;3204:26;3233:12;;;;;;;;;-1:-1:-1;;;;;3233:12:2;-1:-1:-1;;;;;3233:36:2;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3281:27;3323:12;;:42;;-1:-1:-1;;;3323:42:2;;3359:4;3323:42;;;534:51:23;3204:67:2;;-1:-1:-1;3281:27:2;;-1:-1:-1;;;;;3323:12:2;;;;:27;;507:18:23;;3323:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3376:12;;:27;;-1:-1:-1;;;3376:27:2;;;;;742:25:23;;;3281:84:2;;-1:-1:-1;;;;;;3376:12:2;;:18;;715::23;;3376:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3461:13:2;;;:38;;-1:-1:-1;;;3461:38:2;;3493:4;3461:38;;;534:51:23;;;;3414:32:2;;-1:-1:-1;;;;;;3461:13:2;;-1:-1:-1;3461:23:2;;507:18:23;;3461:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3414:85;;3509:25;3537:12;;;;;;;;;-1:-1:-1;;;;;3537:12:2;-1:-1:-1;;;;;3537:36:2;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3585:26;3614:12;;:42;;-1:-1:-1;;;3614:42:2;;3650:4;3614:42;;;534:51:23;3509:66:2;;-1:-1:-1;3585:26:2;;-1:-1:-1;;;;;3614:12:2;;;;:27;;507:18:23;;3614:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3585:71;-1:-1:-1;3762:24:2;3723:35;3751:7;3723:25;:35;:::i;:::-;:63;3719:116;;3807:17;;;;;;;3719:116;3925:17;3893:28;3914:7;3893:18;:28;:::i;:::-;:49;3889:102;;3963:17;;;;;;;3889:102;4083:18;4050:29;4072:7;4050:19;:29;:::i;:::-;:51;4046:104;;4122:17;;;;;;;4046:104;3098:1058;;;;;;3059:1097;:::o;14:180:23:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:23;;14:180;-1:-1:-1;14:180:23:o;199:184::-;269:6;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;-1:-1:-1;361:16:23;;199:184;-1:-1:-1;199:184:23:o;778:128::-;818:3;849:1;845:6;842:1;839:13;836:39;;;855:18;;:::i;:::-;-1:-1:-1;891:9:23;;778:128::o;911:125::-;951:4;979:1;976;973:8;970:34;;;984:18;;:::i;:::-;-1:-1:-1;1021:9:23;;911:125::o;1041:127::-;1102:10;1097:3;1093:20;1090:1;1083:31;1133:4;1130:1;1123:15;1157:4;1154:1;1147:15",
  "source": "pragma solidity ^0.8.4;\n\nimport \"../ERC20StakingRewardsDistribution.sol\";\nimport \"../interfaces/IERC20StakingRewardsDistribution.sol\";\nimport \"../ERC20StakingRewardsDistributionFactory.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockUser {\n    IERC20StakingRewardsDistribution internal distribution;\n    address internal stakingToken;\n\n    constructor(address _distribution, address _stakingToken) {\n        distribution = IERC20StakingRewardsDistribution(_distribution);\n        stakingToken = _stakingToken;\n        // Approve staking tokens to distribution\n        IERC20(_stakingToken).approve(_distribution, type(uint256).max);\n    }\n\n    function stake(uint256 _amount) public {\n        distribution.stake(_amount);\n    }\n\n    function withdraw(uint256 _amount) public {\n        distribution.withdraw(_amount);\n    }\n\n    function claim(uint256[] memory _amounts) public {\n        distribution.claim(_amounts, address(this));\n    }\n\n    function claimAll() public {\n        distribution.claimAll(address(this));\n    }\n\n    function cancel() public {\n        distribution.cancel();\n    }\n\n    function recoverUnassignedRewards() public {\n        distribution.recoverUnassignedRewards();\n    }\n}\n\ncontract ERC20StakingRewardsDistributionFuzzer {\n    ERC20StakingRewardsDistribution internal distribution;\n    MockUser internal mockUser;\n\n    IERC20 rewardToken1;\n    IERC20 rewardToken2;\n    IERC20 stakableToken;\n\n    event AssertionFailed();\n\n    constructor() {\n        rewardToken1 = new ERC20(\"Reward token 1\", \"RWD1\");\n        rewardToken2 = new ERC20(\"Reward token 2\", \"RWD2\");\n        stakableToken = new ERC20(\"Stakable token\", \"STK\");\n\n        ERC20StakingRewardsDistribution _implementation =\n            new ERC20StakingRewardsDistribution();\n        ERC20StakingRewardsDistributionFactory factory =\n            new ERC20StakingRewardsDistributionFactory(\n                address(_implementation)\n            );\n\n        uint256[] memory _rewardAmounts = new uint256[](2);\n        _rewardAmounts[0] = 1 ether;\n        _rewardAmounts[1] = 2 ether;\n        rewardToken1.approve(address(factory), _rewardAmounts[0]);\n        rewardToken2.approve(address(factory), _rewardAmounts[1]);\n\n        address[] memory _rewardTokens = new address[](2);\n        _rewardTokens[0] = address(rewardToken1);\n        _rewardTokens[1] = address(rewardToken2);\n        factory.createDistribution(\n            _rewardTokens,\n            address(stakableToken),\n            _rewardAmounts,\n            uint64(block.timestamp),\n            uint64(block.timestamp + 10000),\n            false,\n            0\n        );\n\n        distribution = ERC20StakingRewardsDistribution(\n            address(factory.distributions(0))\n        );\n        stakableToken.approve(address(distribution), 10000 ether);\n        mockUser = new MockUser(address(distribution), address(stakableToken));\n        stakableToken.transfer(address(mockUser), 100 * 10**18);\n    }\n\n    // Test stake function\n    function stake(uint256 _amount) public {\n        uint256 _stakerTokenBalanceBefore =\n            stakableToken.balanceOf(address(this));\n        uint256 _totalStakedBefore = distribution.totalStakedTokensAmount();\n        uint256 _stakedTokensBefore =\n            distribution.stakedTokensOf(address(this));\n\n        distribution.stake(_amount);\n\n        uint256 _stakerTokenBalanceAfter =\n            stakableToken.balanceOf(address(this));\n        uint256 _totalStakedAfter = distribution.totalStakedTokensAmount();\n        uint256 _stakedTokensAfter = distribution.stakedTokensOf(address(this));\n\n        // staker token balance decreased by amount\n        if (_stakerTokenBalanceBefore - _amount != _stakerTokenBalanceAfter) {\n            emit AssertionFailed();\n        }\n\n        // total staked increased by amount\n        if (_totalStakedBefore + _amount != _totalStakedAfter) {\n            emit AssertionFailed();\n        }\n\n        // staked tokens increased by amount\n        if (_stakedTokensBefore + _amount != _stakedTokensAfter) {\n            emit AssertionFailed();\n        }\n    }\n    /* \n    // Test stake function as user\n    function stakeAsUser(uint256 amount) public {\n        uint256 stakerTokenBalanceBefore = token3.balanceOf(address(mockUser));\n        uint256 totalStakedBefore = distribution.totalStakedTokensAmount();\n        uint256 stakedTokensBefore =\n            distribution.stakedTokensOf(address(mockUser));\n        mockUser.stake(amount);\n        uint256 stakerTokenBalanceAfter = token3.balanceOf(address(mockUser));\n        uint256 totalStakedAfter = distribution.totalStakedTokensAmount();\n        uint256 stakedTokensAfter =\n            distribution.stakedTokensOf(address(mockUser));\n\n        // Assert that staker token balance decreases by amount\n        if (stakerTokenBalanceBefore - amount != stakerTokenBalanceAfter) {\n            emit AssertionFailed();\n        }\n        // Assert that total staked increases by amount\n        if (totalStakedBefore + amount != totalStakedAfter) {\n            emit AssertionFailed();\n        }\n        // Assert that staked tokens increases by amount\n        if (stakedTokensBefore + amount != stakedTokensAfter) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test withdraw function\n    function withdraw(uint256 amount) public {\n        uint256 stakerTokenBalanceBefore = token3.balanceOf(address(this));\n        uint256 totalStakedBefore = distribution.totalStakedTokensAmount();\n        uint256 stakedTokensBefore = distribution.stakedTokensOf(address(this));\n        distribution.withdraw(amount);\n        uint256 stakerTokenBalanceAfter = token3.balanceOf(address(this));\n        uint256 totalStakedAfter = distribution.totalStakedTokensAmount();\n        uint256 stakedTokensAfter = distribution.stakedTokensOf(address(this));\n\n        // Assert that staker token balance increases by amount\n        if (stakerTokenBalanceBefore + amount != stakerTokenBalanceAfter) {\n            emit AssertionFailed();\n        }\n        // Assert that total staked decreases by amount\n        if (totalStakedBefore - amount != totalStakedAfter) {\n            emit AssertionFailed();\n        }\n        // Assert that staked tokens decreases by amount\n        if (stakedTokensBefore - amount != stakedTokensAfter) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test withdraw function as user\n    function withdrawAsUser(uint256 amount) public {\n        uint256 stakerTokenBalanceBefore = token3.balanceOf(address(mockUser));\n        uint256 totalStakedBefore = distribution.totalStakedTokensAmount();\n        uint256 stakedTokensBefore =\n            distribution.stakedTokensOf(address(mockUser));\n        mockUser.withdraw(amount);\n        uint256 stakerTokenBalanceAfter = token3.balanceOf(address(mockUser));\n        uint256 totalStakedAfter = distribution.totalStakedTokensAmount();\n        uint256 stakedTokensAfter =\n            distribution.stakedTokensOf(address(mockUser));\n\n        // Assert that staker token balance increases by amount\n        if (stakerTokenBalanceBefore + amount != stakerTokenBalanceAfter) {\n            emit AssertionFailed();\n        }\n        // Assert that total staked decreases by amount\n        if (totalStakedBefore - amount != totalStakedAfter) {\n            emit AssertionFailed();\n        }\n        // Assert that staked tokens decreases by amount\n        if (stakedTokensBefore - amount != stakedTokensAfter) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test claim function\n    function claim(uint256[] memory amounts) public {\n        uint256 rewardBalancesBefore1 = token1.balanceOf(address(this));\n        uint256 rewardBalancesBefore2 = token2.balanceOf(address(this));\n        distribution.claim(amounts, address(this));\n        uint256 rewardBalancesAfter1 = token1.balanceOf(address(this));\n        uint256 rewardBalancesAfter2 = token2.balanceOf(address(this));\n\n        // Assert that reward token balances are increasing at least by expected amounts\n        if (rewardBalancesBefore1 + amounts[0] > rewardBalancesAfter1) {\n            emit AssertionFailed();\n        }\n        if (rewardBalancesBefore2 + amounts[1] > rewardBalancesAfter2) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test claim function as user\n    function claimAsUser(uint256[] memory amounts) public {\n        uint256 rewardBalancesBefore1 = token1.balanceOf(address(mockUser));\n        uint256 rewardBalancesBefore2 = token2.balanceOf(address(mockUser));\n        mockUser.claim(amounts);\n        uint256 rewardBalancesAfter1 = token1.balanceOf(address(mockUser));\n        uint256 rewardBalancesAfter2 = token2.balanceOf(address(mockUser));\n\n        // Assert that reward token balances are increasing at least by expected amounts\n        if (rewardBalancesBefore1 + amounts[0] > rewardBalancesAfter1) {\n            emit AssertionFailed();\n        }\n        if (rewardBalancesBefore2 + amounts[1] > rewardBalancesAfter2) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test claimAll function\n    function claimAll() public {\n        uint256[] memory claimableRewards =\n            distribution.claimableRewards(address(this));\n\n        uint256 rewardBalancesBefore1 = token1.balanceOf(address(this));\n        uint256 rewardBalancesBefore2 = token2.balanceOf(address(this));\n        distribution.claimAll(address(this));\n        uint256 rewardBalancesAfter1 = token1.balanceOf(address(this));\n        uint256 rewardBalancesAfter2 = token2.balanceOf(address(this));\n\n        // Assert that reward token balances are increasing at least by expected amounts - 1 wei rounding buffer\n        if (\n            (rewardBalancesBefore1 + claimableRewards[0]) >\n            (rewardBalancesAfter1 + 1)\n        ) {\n            emit AssertionFailed();\n        }\n        if (\n            (rewardBalancesBefore2 + claimableRewards[1]) >\n            (rewardBalancesAfter2 + 1)\n        ) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test claimAll function as user\n    function claimAllAsUser() public {\n        uint256[] memory claimableRewards =\n            distribution.claimableRewards(address(mockUser));\n\n        uint256 rewardBalancesBefore1 = token1.balanceOf(address(mockUser));\n        uint256 rewardBalancesBefore2 = token2.balanceOf(address(mockUser));\n        mockUser.claimAll();\n        uint256 rewardBalancesAfter1 = token1.balanceOf(address(mockUser));\n        uint256 rewardBalancesAfter2 = token2.balanceOf(address(mockUser));\n\n        // Assert that reward token balances are increasing at least by expected amounts - 1 wei rounding buffer\n        if (\n            (rewardBalancesBefore1 + claimableRewards[0]) >\n            (rewardBalancesAfter1 + 1)\n        ) {\n            emit AssertionFailed();\n        }\n        if (\n            (rewardBalancesBefore2 + claimableRewards[1]) >\n            (rewardBalancesAfter2 + 1)\n        ) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test cancel function\n    function cancel() public {\n        distribution.cancel();\n\n        // Assert revert since after startingTimestamp\n        emit AssertionFailed();\n    }\n\n    // Test cancel function as user\n    function cancelAsUser() public {\n        mockUser.cancel();\n\n        // Assert revert since after startingTimestamp\n        emit AssertionFailed();\n    }\n\n    // Test addRewards function\n    function addRewards(uint256 seed, uint256 amount) public {\n        address rewardToken;\n        if (seed % 2 == 0) {\n            rewardToken = address(token1);\n        } else {\n            rewardToken = address(token2);\n        }\n        uint256 distributionRewardAmountBefore =\n            distribution.rewardAmount(rewardToken);\n        uint256 distributionRewardBalanceBefore =\n            IERC20(rewardToken).balanceOf(address(distribution));\n        distribution.addRewards(rewardToken, amount);\n        uint256 distributionRewardAmountAfter =\n            distribution.rewardAmount(rewardToken);\n        uint256 distributionRewardBalanceAfter =\n            IERC20(rewardToken).balanceOf(address(distribution));\n\n        // Assert that tracked reward amount is correctly increased\n        if (\n            distributionRewardAmountBefore + amount !=\n            distributionRewardAmountAfter\n        ) {\n            emit AssertionFailed();\n        }\n        // Assert that distribution reward balance is properly increased\n        if (\n            distributionRewardBalanceBefore + amount !=\n            distributionRewardBalanceAfter\n        ) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test addRewards function as user\n    function addRewardsAsUser(uint256 seed, uint256 amount) public {\n        address rewardToken;\n        if (seed % 2 == 0) {\n            rewardToken = address(token1);\n        } else {\n            rewardToken = address(token2);\n        }\n        uint256 distributionRewardAmountBefore =\n            distribution.rewardAmount(rewardToken);\n        uint256 distributionRewardBalanceBefore =\n            IERC20(rewardToken).balanceOf(address(distribution));\n        mockUser.addRewards(rewardToken, amount);\n        uint256 distributionRewardAmountAfter =\n            distribution.rewardAmount(rewardToken);\n        uint256 distributionRewardBalanceAfter =\n            IERC20(rewardToken).balanceOf(address(distribution));\n\n        // Assert that tracked reward amount is correctly increased\n        if (\n            distributionRewardAmountBefore + amount !=\n            distributionRewardAmountAfter\n        ) {\n            emit AssertionFailed();\n        }\n        // Assert that distribution reward balance is properly increased\n        if (\n            distributionRewardBalanceBefore + amount !=\n            distributionRewardBalanceAfter\n        ) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test recoverUnassignedRewards function\n    function recoverUnassignedRewards() public {\n        uint256 recoverableRewards1 =\n            distribution.recoverableUnassignedReward(address(token1));\n        uint256 recoverableRewards2 =\n            distribution.recoverableUnassignedReward(address(token2));\n        uint256 ownerRewardBalancesBefore1 = token1.balanceOf(address(this));\n        uint256 ownerRewardBalancesBefore2 = token2.balanceOf(address(this));\n\n        distribution.recoverUnassignedRewards();\n\n        uint256 ownerRewardBalancesAfter1 = token1.balanceOf(address(this));\n        uint256 ownerRewardBalancesAfter2 = token2.balanceOf(address(this));\n\n        // Assert owner balances increase by at least expected amount\n        if (\n            (ownerRewardBalancesBefore1 + recoverableRewards1) >\n            ownerRewardBalancesAfter1\n        ) {\n            emit AssertionFailed();\n        }\n        if (\n            (ownerRewardBalancesBefore2 + recoverableRewards2) >\n            ownerRewardBalancesAfter2\n        ) {\n            emit AssertionFailed();\n        }\n    }\n\n    // Test recoverUnassignedRewardsAsUser function\n    function recoverUnassignedRewardsAsUser() public {\n        uint256 recoverableRewards1 =\n            distribution.recoverableUnassignedReward(address(token1));\n        uint256 recoverableRewards2 =\n            distribution.recoverableUnassignedReward(address(token2));\n        uint256 ownerRewardBalancesBefore1 = token1.balanceOf(address(this));\n        uint256 ownerRewardBalancesBefore2 = token2.balanceOf(address(this));\n\n        mockUser.recoverUnassignedRewards();\n\n        uint256 ownerRewardBalancesAfter1 = token1.balanceOf(address(this));\n        uint256 ownerRewardBalancesAfter2 = token2.balanceOf(address(this));\n\n        // Assert owner balances increase by at least expected amount\n        if (\n            (ownerRewardBalancesBefore1 + recoverableRewards1) >\n            ownerRewardBalancesAfter1\n        ) {\n            emit AssertionFailed();\n        }\n        if (\n            (ownerRewardBalancesBefore2 + recoverableRewards2) >\n            ownerRewardBalancesAfter2\n        ) {\n            emit AssertionFailed();\n        }\n    } */\n}\n",
  "sourcePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/fuzzing/ERC20StakingRewardsDistributionFuzzer.sol",
  "ast": {
    "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/fuzzing/ERC20StakingRewardsDistributionFuzzer.sol",
    "exportedSymbols": {
      "Address": [
        4611
      ],
      "Clones": [
        3186
      ],
      "Context": [
        4634
      ],
      "ERC20": [
        3779
      ],
      "ERC20StakingRewardsDistribution": [
        1630
      ],
      "ERC20StakingRewardsDistributionFactory": [
        1815
      ],
      "ERC20StakingRewardsDistributionFuzzer": [
        2245
      ],
      "IERC20": [
        3857
      ],
      "IERC20StakingRewardsDistribution": [
        2355
      ],
      "IERC20StakingRewardsDistributionFactory": [
        2404
      ],
      "Math": [
        4743
      ],
      "MockUser": [
        1930
      ],
      "Ownable": [
        3106
      ],
      "SafeERC20": [
        4315
      ]
    },
    "id": 2246,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1817,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/ERC20StakingRewardsDistribution.sol",
        "file": "../ERC20StakingRewardsDistribution.sol",
        "id": 1818,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 1631,
        "src": "25:48:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/interfaces/IERC20StakingRewardsDistribution.sol",
        "file": "../interfaces/IERC20StakingRewardsDistribution.sol",
        "id": 1819,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 2356,
        "src": "74:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/ERC20StakingRewardsDistributionFactory.sol",
        "file": "../ERC20StakingRewardsDistributionFactory.sol",
        "id": 1820,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 1816,
        "src": "135:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1821,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 3858,
        "src": "191:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 3780,
        "src": "248:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1930,
        "linearizedBaseContracts": [
          1930
        ],
        "name": "MockUser",
        "nameLocation": "314:8:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1825,
            "mutability": "mutable",
            "name": "distribution",
            "nameLocation": "371:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 1930,
            "src": "329:54:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
              "typeString": "contract IERC20StakingRewardsDistribution"
            },
            "typeName": {
              "id": 1824,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1823,
                "name": "IERC20StakingRewardsDistribution",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2355,
                "src": "329:32:2"
              },
              "referencedDeclaration": 2355,
              "src": "329:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                "typeString": "contract IERC20StakingRewardsDistribution"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1827,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "406:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 1930,
            "src": "389:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1826,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1856,
              "nodeType": "Block",
              "src": "483:240:2",
              "statements": [
                {
                  "expression": {
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1834,
                      "name": "distribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1825,
                      "src": "493:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                        "typeString": "contract IERC20StakingRewardsDistribution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1836,
                          "name": "_distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1829,
                          "src": "541:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1835,
                        "name": "IERC20StakingRewardsDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2355,
                        "src": "508:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20StakingRewardsDistribution_$2355_$",
                          "typeString": "type(contract IERC20StakingRewardsDistribution)"
                        }
                      },
                      "id": 1837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "508:47:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                        "typeString": "contract IERC20StakingRewardsDistribution"
                      }
                    },
                    "src": "493:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                      "typeString": "contract IERC20StakingRewardsDistribution"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "493:62:2"
                },
                {
                  "expression": {
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1840,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1827,
                      "src": "565:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1841,
                      "name": "_stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "580:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "565:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1843,
                  "nodeType": "ExpressionStatement",
                  "src": "565:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1848,
                        "name": "_distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1829,
                        "src": "683:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "703:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1850,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "703:7:2",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 1849,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "698:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "698:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "698:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1845,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "660:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1844,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3857,
                          "src": "653:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3857_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "653:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "653:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1855,
                  "nodeType": "ExpressionStatement",
                  "src": "653:63:2"
                }
              ]
            },
            "id": 1857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "_distribution",
                  "nameLocation": "445:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "437:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "468:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "460:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:46:2"
            },
            "returnParameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:2"
            },
            "scope": 1930,
            "src": "425:298:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1868,
              "nodeType": "Block",
              "src": "768:44:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1865,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "797:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1862,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "778:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2312,
                      "src": "778:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "778:27:2"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 1869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "738:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "752:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "744:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:17:2"
            },
            "returnParameters": {
              "id": 1861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:2"
            },
            "scope": 1930,
            "src": "729:83:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1880,
              "nodeType": "Block",
              "src": "860:47:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1877,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "892:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1874,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "870:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "870:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "870:30:2"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 1881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "827:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "844:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1881,
                  "src": "836:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:17:2"
            },
            "returnParameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:2"
            },
            "scope": 1930,
            "src": "818:89:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "962:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1890,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1884,
                        "src": "991:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1893,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1009:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          ],
                          "id": 1892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1001:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1001:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1001:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1887,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "972:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2325,
                      "src": "972:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256[] memory,address) external"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "972:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1896,
                  "nodeType": "ExpressionStatement",
                  "src": "972:43:2"
                }
              ]
            },
            "functionSelector": "6ba4c138",
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "922:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1884,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "945:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "928:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1882,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "928:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1883,
                    "nodeType": "ArrayTypeName",
                    "src": "928:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "927:27:2"
            },
            "returnParameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:0:2"
            },
            "scope": 1930,
            "src": "913:109:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1910,
              "nodeType": "Block",
              "src": "1055:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1906,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1095:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          ],
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1087:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1904,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1087:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1087:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1901,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1065:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2330,
                      "src": "1065:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1909,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:36:2"
                }
              ]
            },
            "functionSelector": "d1058e59",
            "id": 1911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAll",
            "nameLocation": "1037:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:2:2"
            },
            "returnParameters": {
              "id": 1900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:2"
            },
            "scope": 1930,
            "src": "1028:80:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1919,
              "nodeType": "Block",
              "src": "1139:38:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1914,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1149:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2304,
                      "src": "1149:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1149:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1918,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:21:2"
                }
              ]
            },
            "functionSelector": "ea8a1af0",
            "id": 1920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "1123:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:2:2"
            },
            "returnParameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:2"
            },
            "scope": 1930,
            "src": "1114:63:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "1226:56:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1923,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1236:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recoverUnassignedRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2307,
                      "src": "1236:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:39:2"
                }
              ]
            },
            "functionSelector": "e644067d",
            "id": 1929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverUnassignedRewards",
            "nameLocation": "1192:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:2:2"
            },
            "returnParameters": {
              "id": 1922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:2"
            },
            "scope": 1930,
            "src": "1183:99:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2246,
        "src": "305:979:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1630,
          1815,
          1930,
          3779
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2245,
        "linearizedBaseContracts": [
          2245
        ],
        "name": "ERC20StakingRewardsDistributionFuzzer",
        "nameLocation": "1295:37:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1933,
            "mutability": "mutable",
            "name": "distribution",
            "nameLocation": "1380:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1339:53:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
              "typeString": "contract ERC20StakingRewardsDistribution"
            },
            "typeName": {
              "id": 1932,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1931,
                "name": "ERC20StakingRewardsDistribution",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1630,
                "src": "1339:31:2"
              },
              "referencedDeclaration": 1630,
              "src": "1339:31:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                "typeString": "contract ERC20StakingRewardsDistribution"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1936,
            "mutability": "mutable",
            "name": "mockUser",
            "nameLocation": "1416:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1398:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUser_$1930",
              "typeString": "contract MockUser"
            },
            "typeName": {
              "id": 1935,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1934,
                "name": "MockUser",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1930,
                "src": "1398:8:2"
              },
              "referencedDeclaration": 1930,
              "src": "1398:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUser_$1930",
                "typeString": "contract MockUser"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1939,
            "mutability": "mutable",
            "name": "rewardToken1",
            "nameLocation": "1438:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1431:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1938,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1937,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3857,
                "src": "1431:6:2"
              },
              "referencedDeclaration": 3857,
              "src": "1431:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1942,
            "mutability": "mutable",
            "name": "rewardToken2",
            "nameLocation": "1463:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1456:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1941,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1940,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3857,
                "src": "1456:6:2"
              },
              "referencedDeclaration": 3857,
              "src": "1456:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1945,
            "mutability": "mutable",
            "name": "stakableToken",
            "nameLocation": "1488:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1481:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1944,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1943,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3857,
                "src": "1481:6:2"
              },
              "referencedDeclaration": 3857,
              "src": "1481:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1947,
            "name": "AssertionFailed",
            "nameLocation": "1514:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:2:2"
            },
            "src": "1508:24:2"
          },
          {
            "body": {
              "id": 2149,
              "nodeType": "Block",
              "src": "1552:1474:2",
              "statements": [
                {
                  "expression": {
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1950,
                      "name": "rewardToken1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1939,
                      "src": "1562:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "52657761726420746f6b656e2031",
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1587:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8598c4ef96918db75f937e3d9a88defe3b5281980a270f97dbe764bb3157b6bf",
                            "typeString": "literal_string \"Reward token 1\""
                          },
                          "value": "Reward token 1"
                        },
                        {
                          "hexValue": "52574431",
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1605:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d3210339f667b0153b5c49524d82b65737cc923df8553cc5676b275f2d3a5148",
                            "typeString": "literal_string \"RWD1\""
                          },
                          "value": "RWD1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8598c4ef96918db75f937e3d9a88defe3b5281980a270f97dbe764bb3157b6bf",
                            "typeString": "literal_string \"Reward token 1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d3210339f667b0153b5c49524d82b65737cc923df8553cc5676b275f2d3a5148",
                            "typeString": "literal_string \"RWD1\""
                          }
                        ],
                        "id": 1953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1577:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$3779_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 1952,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1951,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3779,
                            "src": "1581:5:2"
                          },
                          "referencedDeclaration": 3779,
                          "src": "1581:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3779",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 1956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1577:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3779",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1562:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:50:2"
                },
                {
                  "expression": {
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1959,
                      "name": "rewardToken2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1942,
                      "src": "1622:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "52657761726420746f6b656e2032",
                          "id": 1963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1647:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dc299454c8ac508cc9506c501fbe13f517b7f965d73086427acac9010bfa6cdd",
                            "typeString": "literal_string \"Reward token 2\""
                          },
                          "value": "Reward token 2"
                        },
                        {
                          "hexValue": "52574432",
                          "id": 1964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1665:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_92e74a57db7a2dbcb5212cdd216844b10c038fc9b00f7461adf60392a80ad811",
                            "typeString": "literal_string \"RWD2\""
                          },
                          "value": "RWD2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dc299454c8ac508cc9506c501fbe13f517b7f965d73086427acac9010bfa6cdd",
                            "typeString": "literal_string \"Reward token 2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_92e74a57db7a2dbcb5212cdd216844b10c038fc9b00f7461adf60392a80ad811",
                            "typeString": "literal_string \"RWD2\""
                          }
                        ],
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1637:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$3779_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 1961,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1960,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3779,
                            "src": "1641:5:2"
                          },
                          "referencedDeclaration": 3779,
                          "src": "1641:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3779",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 1965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1637:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3779",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1622:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1967,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:50:2"
                },
                {
                  "expression": {
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1968,
                      "name": "stakableToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "1682:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5374616b61626c6520746f6b656e",
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1708:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dccc6f2cfdcba874f07f9a42f708f30e9f8763ce31e28fd9acc8c69bbd78dd82",
                            "typeString": "literal_string \"Stakable token\""
                          },
                          "value": "Stakable token"
                        },
                        {
                          "hexValue": "53544b",
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1726:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
                            "typeString": "literal_string \"STK\""
                          },
                          "value": "STK"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dccc6f2cfdcba874f07f9a42f708f30e9f8763ce31e28fd9acc8c69bbd78dd82",
                            "typeString": "literal_string \"Stakable token\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
                            "typeString": "literal_string \"STK\""
                          }
                        ],
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1698:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$3779_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 1970,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1969,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3779,
                            "src": "1702:5:2"
                          },
                          "referencedDeclaration": 3779,
                          "src": "1702:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3779",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1698:34:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3779",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1682:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "1682:50:2"
                },
                {
                  "assignments": [
                    1979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1979,
                      "mutability": "mutable",
                      "name": "_implementation",
                      "nameLocation": "1775:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "1743:47:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                        "typeString": "contract ERC20StakingRewardsDistribution"
                      },
                      "typeName": {
                        "id": 1978,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1977,
                          "name": "ERC20StakingRewardsDistribution",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1630,
                          "src": "1743:31:2"
                        },
                        "referencedDeclaration": 1630,
                        "src": "1743:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1984,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1805:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20StakingRewardsDistribution_$1630_$",
                        "typeString": "function () returns (contract ERC20StakingRewardsDistribution)"
                      },
                      "typeName": {
                        "id": 1981,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1980,
                          "name": "ERC20StakingRewardsDistribution",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1630,
                          "src": "1809:31:2"
                        },
                        "referencedDeclaration": 1630,
                        "src": "1809:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      }
                    },
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                      "typeString": "contract ERC20StakingRewardsDistribution"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1743:99:2"
                },
                {
                  "assignments": [
                    1987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1987,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1891:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "1852:46:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                        "typeString": "contract ERC20StakingRewardsDistributionFactory"
                      },
                      "typeName": {
                        "id": 1986,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1985,
                          "name": "ERC20StakingRewardsDistributionFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1815,
                          "src": "1852:38:2"
                        },
                        "referencedDeclaration": 1815,
                        "src": "1852:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                          "typeString": "contract ERC20StakingRewardsDistributionFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1996,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1993,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "1981:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          ],
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1973:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1973:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1973:24:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1913:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ERC20StakingRewardsDistributionFactory_$1815_$",
                        "typeString": "function (address) returns (contract ERC20StakingRewardsDistributionFactory)"
                      },
                      "typeName": {
                        "id": 1989,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1988,
                          "name": "ERC20StakingRewardsDistributionFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1815,
                          "src": "1917:38:2"
                        },
                        "referencedDeclaration": 1815,
                        "src": "1917:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                          "typeString": "contract ERC20StakingRewardsDistributionFactory"
                        }
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                      "typeString": "contract ERC20StakingRewardsDistributionFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1852:159:2"
                },
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "mutability": "mutable",
                      "name": "_rewardAmounts",
                      "nameLocation": "2039:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "2022:31:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1999,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2022:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2000,
                        "nodeType": "ArrayTypeName",
                        "src": "2022:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2007,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2056:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2002,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2003,
                        "nodeType": "ArrayTypeName",
                        "src": "2060:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2022:50:2"
                },
                {
                  "expression": {
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2008,
                        "name": "_rewardAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "2082:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2010,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2097:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2082:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2102:7:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "2082:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2013,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:27:2"
                },
                {
                  "expression": {
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2014,
                        "name": "_rewardAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "2119:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2016,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2134:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2119:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 2017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2139:7:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2000000000000000000_by_1",
                        "typeString": "int_const 2000000000000000000"
                      },
                      "value": "2"
                    },
                    "src": "2119:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2019,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2025,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "2185:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          ],
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2177:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2177:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2177:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2027,
                          "name": "_rewardAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "2195:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 2029,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2210:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2195:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2020,
                        "name": "rewardToken1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "2156:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "2156:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2037,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "2252:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          ],
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2244:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2244:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2244:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2039,
                          "name": "_rewardAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "2262:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 2041,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2277:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2262:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2032,
                        "name": "rewardToken2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "2223:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "2223:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:57:2"
                },
                {
                  "assignments": [
                    2048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2048,
                      "mutability": "mutable",
                      "name": "_rewardTokens",
                      "nameLocation": "2308:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "2291:30:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2047,
                        "nodeType": "ArrayTypeName",
                        "src": "2291:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2054,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2338:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2324:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2328:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2050,
                        "nodeType": "ArrayTypeName",
                        "src": "2328:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:49:2"
                },
                {
                  "expression": {
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2055,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "2350:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2057,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2364:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2350:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2060,
                          "name": "rewardToken1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1939,
                          "src": "2377:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 2059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2369:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2369:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2369:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2350:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:40:2"
                },
                {
                  "expression": {
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2064,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "2400:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2066,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2400:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2069,
                          "name": "rewardToken2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1942,
                          "src": "2427:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2419:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2419:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2419:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2400:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "2400:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2076,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "2490:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2079,
                            "name": "stakableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "2525:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3857",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3857",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2517:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2517:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2081,
                        "name": "_rewardAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "2553:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2084,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2588:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2588:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2581:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 2082,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "2581:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2581:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2089,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2625:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2625:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 2091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2643:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "2625:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2618:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 2087,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "2618:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2618:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2663:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 2095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2682:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2073,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "2450:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                          "typeString": "contract ERC20StakingRewardsDistributionFactory"
                        }
                      },
                      "id": 2075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createDistribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1805,
                      "src": "2450:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint64_$_t_uint64_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,address,uint256[] memory,uint64,uint64,bool,uint256) external"
                      }
                    },
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:243:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:243:2"
                },
                {
                  "expression": {
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2098,
                      "name": "distribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1933,
                      "src": "2704:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                        "typeString": "contract ERC20StakingRewardsDistribution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2794:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 2102,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1987,
                                  "src": "2772:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                                    "typeString": "contract ERC20StakingRewardsDistributionFactory"
                                  }
                                },
                                "id": 2103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "distributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1652,
                                "src": "2772:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IERC20StakingRewardsDistribution_$2355_$",
                                  "typeString": "function (uint256) view external returns (contract IERC20StakingRewardsDistribution)"
                                }
                              },
                              "id": 2105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2772:24:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                                "typeString": "contract IERC20StakingRewardsDistribution"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                                "typeString": "contract IERC20StakingRewardsDistribution"
                              }
                            ],
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2764:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2100,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2764:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2764:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2099,
                        "name": "ERC20StakingRewardsDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1630,
                        "src": "2719:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20StakingRewardsDistribution_$1630_$",
                          "typeString": "type(contract ERC20StakingRewardsDistribution)"
                        }
                      },
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2719:88:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                        "typeString": "contract ERC20StakingRewardsDistribution"
                      }
                    },
                    "src": "2704:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                      "typeString": "contract ERC20StakingRewardsDistribution"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:103:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2115,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "2847:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          ],
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2839:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2113,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2839:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2839:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2862:11:2",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 2110,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "2817:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "2817:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:57:2"
                },
                {
                  "expression": {
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2120,
                      "name": "mockUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "2884:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUser_$1930",
                        "typeString": "contract MockUser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2126,
                              "name": "distribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1933,
                              "src": "2916:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                                "typeString": "contract ERC20StakingRewardsDistribution"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                                "typeString": "contract ERC20StakingRewardsDistribution"
                              }
                            ],
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2908:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2908:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2908:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2130,
                              "name": "stakableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "2939:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3857",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$3857",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 2129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2931:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2128,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2931:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2931:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2895:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockUser_$1930_$",
                          "typeString": "function (address,address) returns (contract MockUser)"
                        },
                        "typeName": {
                          "id": 2122,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2121,
                            "name": "MockUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1930,
                            "src": "2899:8:2"
                          },
                          "referencedDeclaration": 1930,
                          "src": "2899:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUser_$1930",
                            "typeString": "contract MockUser"
                          }
                        }
                      },
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2895:59:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUser_$1930",
                        "typeString": "contract MockUser"
                      }
                    },
                    "src": "2884:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockUser_$1930",
                      "typeString": "contract MockUser"
                    }
                  },
                  "id": 2134,
                  "nodeType": "ExpressionStatement",
                  "src": "2884:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2140,
                            "name": "mockUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1936,
                            "src": "2995:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          ],
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2987:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2987:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2987:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3006:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 2145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3012:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 2144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3016:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3012:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3006:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 2135,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "2964:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3806,
                      "src": "2964:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "2964:55:2"
                }
              ]
            },
            "id": 2150,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1549:2:2"
            },
            "returnParameters": {
              "id": 1949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:2"
            },
            "scope": 2245,
            "src": "1538:1488:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2243,
              "nodeType": "Block",
              "src": "3098:1058:2",
              "statements": [
                {
                  "assignments": [
                    2156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2156,
                      "mutability": "mutable",
                      "name": "_stakerTokenBalanceBefore",
                      "nameLocation": "3116:25:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3108:33:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3108:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2164,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2161,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3188:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3180:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2159,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3180:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3180:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2157,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "3156:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3796,
                      "src": "3156:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3108:86:2"
                },
                {
                  "assignments": [
                    2166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2166,
                      "mutability": "mutable",
                      "name": "_totalStakedBefore",
                      "nameLocation": "3212:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3204:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3204:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2170,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2167,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3233:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakedTokensAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "3233:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3204:67:2"
                },
                {
                  "assignments": [
                    2172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2172,
                      "mutability": "mutable",
                      "name": "_stakedTokensBefore",
                      "nameLocation": "3289:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3281:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3281:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2180,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2177,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3359:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3351:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3351:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3351:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2173,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3323:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedTokensOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "3323:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3323:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3281:84:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2184,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "3395:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2181,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3376:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 582,
                      "src": "3376:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3376:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2186,
                  "nodeType": "ExpressionStatement",
                  "src": "3376:27:2"
                },
                {
                  "assignments": [
                    2188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2188,
                      "mutability": "mutable",
                      "name": "_stakerTokenBalanceAfter",
                      "nameLocation": "3422:24:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3414:32:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3414:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2196,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2193,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3493:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3485:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3485:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3485:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2189,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "3461:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3796,
                      "src": "3461:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3414:85:2"
                },
                {
                  "assignments": [
                    2198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2198,
                      "mutability": "mutable",
                      "name": "_totalStakedAfter",
                      "nameLocation": "3517:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3509:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3509:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2202,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2199,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3537:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakedTokensAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "3537:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3537:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3509:66:2"
                },
                {
                  "assignments": [
                    2204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2204,
                      "mutability": "mutable",
                      "name": "_stakedTokensAfter",
                      "nameLocation": "3593:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3585:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3585:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2212,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2209,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3650:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3642:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2207,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3642:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3642:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2205,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3614:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedTokensOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "3614:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3585:71:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2213,
                        "name": "_stakerTokenBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2156,
                        "src": "3723:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2214,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "3751:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3723:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2216,
                      "name": "_stakerTokenBalanceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2188,
                      "src": "3762:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3723:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2222,
                  "nodeType": "IfStatement",
                  "src": "3719:116:2",
                  "trueBody": {
                    "id": 2221,
                    "nodeType": "Block",
                    "src": "3788:47:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2218,
                            "name": "AssertionFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "3807:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3807:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2220,
                        "nodeType": "EmitStatement",
                        "src": "3802:22:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2223,
                        "name": "_totalStakedBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2166,
                        "src": "3893:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2224,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "3914:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3893:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2226,
                      "name": "_totalStakedAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2198,
                      "src": "3925:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3893:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2232,
                  "nodeType": "IfStatement",
                  "src": "3889:102:2",
                  "trueBody": {
                    "id": 2231,
                    "nodeType": "Block",
                    "src": "3944:47:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2228,
                            "name": "AssertionFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "3963:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3963:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2230,
                        "nodeType": "EmitStatement",
                        "src": "3958:22:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2233,
                        "name": "_stakedTokensBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "4050:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2234,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "4072:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4050:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2236,
                      "name": "_stakedTokensAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2204,
                      "src": "4083:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4050:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2242,
                  "nodeType": "IfStatement",
                  "src": "4046:104:2",
                  "trueBody": {
                    "id": 2241,
                    "nodeType": "Block",
                    "src": "4103:47:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2238,
                            "name": "AssertionFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "4122:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4122:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2240,
                        "nodeType": "EmitStatement",
                        "src": "4117:22:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 2244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "3068:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3082:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2244,
                  "src": "3074:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:17:2"
            },
            "returnParameters": {
              "id": 2154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3098:0:2"
            },
            "scope": 2245,
            "src": "3059:1097:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2246,
        "src": "1286:14831:2",
        "usedErrors": []
      }
    ],
    "src": "0:16118:2"
  },
  "legacyAST": {
    "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/fuzzing/ERC20StakingRewardsDistributionFuzzer.sol",
    "exportedSymbols": {
      "Address": [
        4611
      ],
      "Clones": [
        3186
      ],
      "Context": [
        4634
      ],
      "ERC20": [
        3779
      ],
      "ERC20StakingRewardsDistribution": [
        1630
      ],
      "ERC20StakingRewardsDistributionFactory": [
        1815
      ],
      "ERC20StakingRewardsDistributionFuzzer": [
        2245
      ],
      "IERC20": [
        3857
      ],
      "IERC20StakingRewardsDistribution": [
        2355
      ],
      "IERC20StakingRewardsDistributionFactory": [
        2404
      ],
      "Math": [
        4743
      ],
      "MockUser": [
        1930
      ],
      "Ownable": [
        3106
      ],
      "SafeERC20": [
        4315
      ]
    },
    "id": 2246,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1817,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/ERC20StakingRewardsDistribution.sol",
        "file": "../ERC20StakingRewardsDistribution.sol",
        "id": 1818,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 1631,
        "src": "25:48:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/interfaces/IERC20StakingRewardsDistribution.sol",
        "file": "../interfaces/IERC20StakingRewardsDistribution.sol",
        "id": 1819,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 2356,
        "src": "74:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/luzzif/Projects/swapr-lp-staker/contracts/ERC20StakingRewardsDistributionFactory.sol",
        "file": "../ERC20StakingRewardsDistributionFactory.sol",
        "id": 1820,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 1816,
        "src": "135:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1821,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 3858,
        "src": "191:56:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2246,
        "sourceUnit": 3780,
        "src": "248:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1930,
        "linearizedBaseContracts": [
          1930
        ],
        "name": "MockUser",
        "nameLocation": "314:8:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1825,
            "mutability": "mutable",
            "name": "distribution",
            "nameLocation": "371:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 1930,
            "src": "329:54:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
              "typeString": "contract IERC20StakingRewardsDistribution"
            },
            "typeName": {
              "id": 1824,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1823,
                "name": "IERC20StakingRewardsDistribution",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2355,
                "src": "329:32:2"
              },
              "referencedDeclaration": 2355,
              "src": "329:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                "typeString": "contract IERC20StakingRewardsDistribution"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1827,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "406:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 1930,
            "src": "389:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1826,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1856,
              "nodeType": "Block",
              "src": "483:240:2",
              "statements": [
                {
                  "expression": {
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1834,
                      "name": "distribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1825,
                      "src": "493:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                        "typeString": "contract IERC20StakingRewardsDistribution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1836,
                          "name": "_distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1829,
                          "src": "541:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1835,
                        "name": "IERC20StakingRewardsDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2355,
                        "src": "508:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20StakingRewardsDistribution_$2355_$",
                          "typeString": "type(contract IERC20StakingRewardsDistribution)"
                        }
                      },
                      "id": 1837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "508:47:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                        "typeString": "contract IERC20StakingRewardsDistribution"
                      }
                    },
                    "src": "493:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                      "typeString": "contract IERC20StakingRewardsDistribution"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "493:62:2"
                },
                {
                  "expression": {
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1840,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1827,
                      "src": "565:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1841,
                      "name": "_stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "580:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "565:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1843,
                  "nodeType": "ExpressionStatement",
                  "src": "565:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1848,
                        "name": "_distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1829,
                        "src": "683:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "703:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1850,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "703:7:2",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 1849,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "698:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "698:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "698:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1845,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "660:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1844,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3857,
                          "src": "653:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3857_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "653:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "653:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1855,
                  "nodeType": "ExpressionStatement",
                  "src": "653:63:2"
                }
              ]
            },
            "id": 1857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "_distribution",
                  "nameLocation": "445:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "437:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "468:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1857,
                  "src": "460:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "436:46:2"
            },
            "returnParameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:2"
            },
            "scope": 1930,
            "src": "425:298:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1868,
              "nodeType": "Block",
              "src": "768:44:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1865,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1859,
                        "src": "797:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1862,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "778:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2312,
                      "src": "778:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "778:27:2"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 1869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "738:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "752:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "744:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:17:2"
            },
            "returnParameters": {
              "id": 1861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:2"
            },
            "scope": 1930,
            "src": "729:83:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1880,
              "nodeType": "Block",
              "src": "860:47:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1877,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1871,
                        "src": "892:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1874,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "870:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2317,
                      "src": "870:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "870:30:2"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 1881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "827:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "844:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1881,
                  "src": "836:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:17:2"
            },
            "returnParameters": {
              "id": 1873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:2"
            },
            "scope": 1930,
            "src": "818:89:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "962:60:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1890,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1884,
                        "src": "991:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1893,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1009:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          ],
                          "id": 1892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1001:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1001:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1001:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1887,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "972:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2325,
                      "src": "972:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (uint256[] memory,address) external"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "972:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1896,
                  "nodeType": "ExpressionStatement",
                  "src": "972:43:2"
                }
              ]
            },
            "functionSelector": "6ba4c138",
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "922:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1884,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "945:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "928:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1882,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "928:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1883,
                    "nodeType": "ArrayTypeName",
                    "src": "928:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "927:27:2"
            },
            "returnParameters": {
              "id": 1886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:0:2"
            },
            "scope": 1930,
            "src": "913:109:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1910,
              "nodeType": "Block",
              "src": "1055:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1906,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1095:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          ],
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1087:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1904,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1087:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1087:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1901,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1065:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2330,
                      "src": "1065:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1909,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:36:2"
                }
              ]
            },
            "functionSelector": "d1058e59",
            "id": 1911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAll",
            "nameLocation": "1037:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:2:2"
            },
            "returnParameters": {
              "id": 1900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1055:0:2"
            },
            "scope": 1930,
            "src": "1028:80:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1919,
              "nodeType": "Block",
              "src": "1139:38:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1914,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1149:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2304,
                      "src": "1149:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1149:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1918,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:21:2"
                }
              ]
            },
            "functionSelector": "ea8a1af0",
            "id": 1920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "1123:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:2:2"
            },
            "returnParameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:2"
            },
            "scope": 1930,
            "src": "1114:63:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "1226:56:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1923,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "1236:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                          "typeString": "contract IERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 1925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recoverUnassignedRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2307,
                      "src": "1236:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:39:2"
                }
              ]
            },
            "functionSelector": "e644067d",
            "id": 1929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recoverUnassignedRewards",
            "nameLocation": "1192:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1216:2:2"
            },
            "returnParameters": {
              "id": 1922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:2"
            },
            "scope": 1930,
            "src": "1183:99:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2246,
        "src": "305:979:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1630,
          1815,
          1930,
          3779
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2245,
        "linearizedBaseContracts": [
          2245
        ],
        "name": "ERC20StakingRewardsDistributionFuzzer",
        "nameLocation": "1295:37:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1933,
            "mutability": "mutable",
            "name": "distribution",
            "nameLocation": "1380:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1339:53:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
              "typeString": "contract ERC20StakingRewardsDistribution"
            },
            "typeName": {
              "id": 1932,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1931,
                "name": "ERC20StakingRewardsDistribution",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1630,
                "src": "1339:31:2"
              },
              "referencedDeclaration": 1630,
              "src": "1339:31:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                "typeString": "contract ERC20StakingRewardsDistribution"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1936,
            "mutability": "mutable",
            "name": "mockUser",
            "nameLocation": "1416:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1398:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUser_$1930",
              "typeString": "contract MockUser"
            },
            "typeName": {
              "id": 1935,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1934,
                "name": "MockUser",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1930,
                "src": "1398:8:2"
              },
              "referencedDeclaration": 1930,
              "src": "1398:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUser_$1930",
                "typeString": "contract MockUser"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1939,
            "mutability": "mutable",
            "name": "rewardToken1",
            "nameLocation": "1438:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1431:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1938,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1937,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3857,
                "src": "1431:6:2"
              },
              "referencedDeclaration": 3857,
              "src": "1431:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1942,
            "mutability": "mutable",
            "name": "rewardToken2",
            "nameLocation": "1463:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1456:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1941,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1940,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3857,
                "src": "1456:6:2"
              },
              "referencedDeclaration": 3857,
              "src": "1456:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1945,
            "mutability": "mutable",
            "name": "stakableToken",
            "nameLocation": "1488:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 2245,
            "src": "1481:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3857",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1944,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1943,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3857,
                "src": "1481:6:2"
              },
              "referencedDeclaration": 3857,
              "src": "1481:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3857",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1947,
            "name": "AssertionFailed",
            "nameLocation": "1514:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1529:2:2"
            },
            "src": "1508:24:2"
          },
          {
            "body": {
              "id": 2149,
              "nodeType": "Block",
              "src": "1552:1474:2",
              "statements": [
                {
                  "expression": {
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1950,
                      "name": "rewardToken1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1939,
                      "src": "1562:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "52657761726420746f6b656e2031",
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1587:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8598c4ef96918db75f937e3d9a88defe3b5281980a270f97dbe764bb3157b6bf",
                            "typeString": "literal_string \"Reward token 1\""
                          },
                          "value": "Reward token 1"
                        },
                        {
                          "hexValue": "52574431",
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1605:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d3210339f667b0153b5c49524d82b65737cc923df8553cc5676b275f2d3a5148",
                            "typeString": "literal_string \"RWD1\""
                          },
                          "value": "RWD1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8598c4ef96918db75f937e3d9a88defe3b5281980a270f97dbe764bb3157b6bf",
                            "typeString": "literal_string \"Reward token 1\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d3210339f667b0153b5c49524d82b65737cc923df8553cc5676b275f2d3a5148",
                            "typeString": "literal_string \"RWD1\""
                          }
                        ],
                        "id": 1953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1577:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$3779_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 1952,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1951,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3779,
                            "src": "1581:5:2"
                          },
                          "referencedDeclaration": 3779,
                          "src": "1581:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3779",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 1956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1577:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3779",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1562:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:50:2"
                },
                {
                  "expression": {
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1959,
                      "name": "rewardToken2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1942,
                      "src": "1622:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "52657761726420746f6b656e2032",
                          "id": 1963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1647:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dc299454c8ac508cc9506c501fbe13f517b7f965d73086427acac9010bfa6cdd",
                            "typeString": "literal_string \"Reward token 2\""
                          },
                          "value": "Reward token 2"
                        },
                        {
                          "hexValue": "52574432",
                          "id": 1964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1665:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_92e74a57db7a2dbcb5212cdd216844b10c038fc9b00f7461adf60392a80ad811",
                            "typeString": "literal_string \"RWD2\""
                          },
                          "value": "RWD2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dc299454c8ac508cc9506c501fbe13f517b7f965d73086427acac9010bfa6cdd",
                            "typeString": "literal_string \"Reward token 2\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_92e74a57db7a2dbcb5212cdd216844b10c038fc9b00f7461adf60392a80ad811",
                            "typeString": "literal_string \"RWD2\""
                          }
                        ],
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1637:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$3779_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 1961,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1960,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3779,
                            "src": "1641:5:2"
                          },
                          "referencedDeclaration": 3779,
                          "src": "1641:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3779",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 1965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1637:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3779",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1622:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1967,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:50:2"
                },
                {
                  "expression": {
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1968,
                      "name": "stakableToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "1682:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3857",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5374616b61626c6520746f6b656e",
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1708:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dccc6f2cfdcba874f07f9a42f708f30e9f8763ce31e28fd9acc8c69bbd78dd82",
                            "typeString": "literal_string \"Stakable token\""
                          },
                          "value": "Stakable token"
                        },
                        {
                          "hexValue": "53544b",
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1726:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
                            "typeString": "literal_string \"STK\""
                          },
                          "value": "STK"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_dccc6f2cfdcba874f07f9a42f708f30e9f8763ce31e28fd9acc8c69bbd78dd82",
                            "typeString": "literal_string \"Stakable token\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
                            "typeString": "literal_string \"STK\""
                          }
                        ],
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1698:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$3779_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 1970,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1969,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3779,
                            "src": "1702:5:2"
                          },
                          "referencedDeclaration": 3779,
                          "src": "1702:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3779",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1698:34:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3779",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1682:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3857",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "1682:50:2"
                },
                {
                  "assignments": [
                    1979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1979,
                      "mutability": "mutable",
                      "name": "_implementation",
                      "nameLocation": "1775:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "1743:47:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                        "typeString": "contract ERC20StakingRewardsDistribution"
                      },
                      "typeName": {
                        "id": 1978,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1977,
                          "name": "ERC20StakingRewardsDistribution",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1630,
                          "src": "1743:31:2"
                        },
                        "referencedDeclaration": 1630,
                        "src": "1743:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1984,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1805:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC20StakingRewardsDistribution_$1630_$",
                        "typeString": "function () returns (contract ERC20StakingRewardsDistribution)"
                      },
                      "typeName": {
                        "id": 1981,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1980,
                          "name": "ERC20StakingRewardsDistribution",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1630,
                          "src": "1809:31:2"
                        },
                        "referencedDeclaration": 1630,
                        "src": "1809:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      }
                    },
                    "id": 1983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                      "typeString": "contract ERC20StakingRewardsDistribution"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1743:99:2"
                },
                {
                  "assignments": [
                    1987
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1987,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1891:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "1852:46:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                        "typeString": "contract ERC20StakingRewardsDistributionFactory"
                      },
                      "typeName": {
                        "id": 1986,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1985,
                          "name": "ERC20StakingRewardsDistributionFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1815,
                          "src": "1852:38:2"
                        },
                        "referencedDeclaration": 1815,
                        "src": "1852:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                          "typeString": "contract ERC20StakingRewardsDistributionFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1996,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1993,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "1981:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          ],
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1973:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1973:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1973:24:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1913:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ERC20StakingRewardsDistributionFactory_$1815_$",
                        "typeString": "function (address) returns (contract ERC20StakingRewardsDistributionFactory)"
                      },
                      "typeName": {
                        "id": 1989,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1988,
                          "name": "ERC20StakingRewardsDistributionFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1815,
                          "src": "1917:38:2"
                        },
                        "referencedDeclaration": 1815,
                        "src": "1917:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                          "typeString": "contract ERC20StakingRewardsDistributionFactory"
                        }
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                      "typeString": "contract ERC20StakingRewardsDistributionFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1852:159:2"
                },
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "mutability": "mutable",
                      "name": "_rewardAmounts",
                      "nameLocation": "2039:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "2022:31:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1999,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2022:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2000,
                        "nodeType": "ArrayTypeName",
                        "src": "2022:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2007,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2056:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2002,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2003,
                        "nodeType": "ArrayTypeName",
                        "src": "2060:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2022:50:2"
                },
                {
                  "expression": {
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2008,
                        "name": "_rewardAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "2082:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2010,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2097:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2082:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2102:7:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "2082:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2013,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:27:2"
                },
                {
                  "expression": {
                    "id": 2018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2014,
                        "name": "_rewardAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "2119:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 2016,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2134:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2119:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 2017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2139:7:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2000000000000000000_by_1",
                        "typeString": "int_const 2000000000000000000"
                      },
                      "value": "2"
                    },
                    "src": "2119:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2019,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:27:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2025,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "2185:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          ],
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2177:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2023,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2177:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2177:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2027,
                          "name": "_rewardAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "2195:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 2029,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2210:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2195:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2020,
                        "name": "rewardToken1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "2156:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "2156:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2037,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "2252:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                              "typeString": "contract ERC20StakingRewardsDistributionFactory"
                            }
                          ],
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2244:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2035,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2244:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2244:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 2039,
                          "name": "_rewardAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2001,
                          "src": "2262:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 2041,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2277:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2262:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2032,
                        "name": "rewardToken2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "2223:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "2223:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:57:2"
                },
                {
                  "assignments": [
                    2048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2048,
                      "mutability": "mutable",
                      "name": "_rewardTokens",
                      "nameLocation": "2308:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2149,
                      "src": "2291:30:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2047,
                        "nodeType": "ArrayTypeName",
                        "src": "2291:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2054,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2338:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2324:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2328:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2050,
                        "nodeType": "ArrayTypeName",
                        "src": "2328:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2291:49:2"
                },
                {
                  "expression": {
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2055,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "2350:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2057,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2364:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2350:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2060,
                          "name": "rewardToken1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1939,
                          "src": "2377:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 2059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2369:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2369:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2369:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2350:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:40:2"
                },
                {
                  "expression": {
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2064,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "2400:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2066,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2400:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2069,
                          "name": "rewardToken2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1942,
                          "src": "2427:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$3857",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2419:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2419:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2419:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2400:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "2400:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2076,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "2490:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2079,
                            "name": "stakableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "2525:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3857",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3857",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 2078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2517:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2517:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2081,
                        "name": "_rewardAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "2553:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2084,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2588:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2588:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2581:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 2082,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "2581:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2581:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2089,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2625:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2625:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 2091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2643:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "2625:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2618:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 2087,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "2618:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2618:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2663:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 2095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2682:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 2073,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1987,
                        "src": "2450:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                          "typeString": "contract ERC20StakingRewardsDistributionFactory"
                        }
                      },
                      "id": 2075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createDistribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1805,
                      "src": "2450:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint64_$_t_uint64_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,address,uint256[] memory,uint64,uint64,bool,uint256) external"
                      }
                    },
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:243:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:243:2"
                },
                {
                  "expression": {
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2098,
                      "name": "distribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1933,
                      "src": "2704:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                        "typeString": "contract ERC20StakingRewardsDistribution"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2794:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 2102,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1987,
                                  "src": "2772:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFactory_$1815",
                                    "typeString": "contract ERC20StakingRewardsDistributionFactory"
                                  }
                                },
                                "id": 2103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "distributions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1652,
                                "src": "2772:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IERC20StakingRewardsDistribution_$2355_$",
                                  "typeString": "function (uint256) view external returns (contract IERC20StakingRewardsDistribution)"
                                }
                              },
                              "id": 2105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2772:24:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                                "typeString": "contract IERC20StakingRewardsDistribution"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20StakingRewardsDistribution_$2355",
                                "typeString": "contract IERC20StakingRewardsDistribution"
                              }
                            ],
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2764:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2100,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2764:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2764:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2099,
                        "name": "ERC20StakingRewardsDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1630,
                        "src": "2719:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20StakingRewardsDistribution_$1630_$",
                          "typeString": "type(contract ERC20StakingRewardsDistribution)"
                        }
                      },
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2719:88:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                        "typeString": "contract ERC20StakingRewardsDistribution"
                      }
                    },
                    "src": "2704:103:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                      "typeString": "contract ERC20StakingRewardsDistribution"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:103:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2115,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1933,
                            "src": "2847:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                              "typeString": "contract ERC20StakingRewardsDistribution"
                            }
                          ],
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2839:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2113,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2839:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2839:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2862:11:2",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 2110,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "2817:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3826,
                      "src": "2817:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:57:2"
                },
                {
                  "expression": {
                    "id": 2133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2120,
                      "name": "mockUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "2884:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUser_$1930",
                        "typeString": "contract MockUser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2126,
                              "name": "distribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1933,
                              "src": "2916:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                                "typeString": "contract ERC20StakingRewardsDistribution"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                                "typeString": "contract ERC20StakingRewardsDistribution"
                              }
                            ],
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2908:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2908:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2908:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2130,
                              "name": "stakableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "2939:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3857",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$3857",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 2129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2931:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2128,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2931:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2931:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2895:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockUser_$1930_$",
                          "typeString": "function (address,address) returns (contract MockUser)"
                        },
                        "typeName": {
                          "id": 2122,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2121,
                            "name": "MockUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1930,
                            "src": "2899:8:2"
                          },
                          "referencedDeclaration": 1930,
                          "src": "2899:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUser_$1930",
                            "typeString": "contract MockUser"
                          }
                        }
                      },
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2895:59:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUser_$1930",
                        "typeString": "contract MockUser"
                      }
                    },
                    "src": "2884:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockUser_$1930",
                      "typeString": "contract MockUser"
                    }
                  },
                  "id": 2134,
                  "nodeType": "ExpressionStatement",
                  "src": "2884:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2140,
                            "name": "mockUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1936,
                            "src": "2995:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUser_$1930",
                              "typeString": "contract MockUser"
                            }
                          ],
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2987:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2987:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2987:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3006:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 2145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 2143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3012:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 2144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3016:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3012:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3006:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 2135,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "2964:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3806,
                      "src": "2964:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2148,
                  "nodeType": "ExpressionStatement",
                  "src": "2964:55:2"
                }
              ]
            },
            "id": 2150,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1549:2:2"
            },
            "returnParameters": {
              "id": 1949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:2"
            },
            "scope": 2245,
            "src": "1538:1488:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2243,
              "nodeType": "Block",
              "src": "3098:1058:2",
              "statements": [
                {
                  "assignments": [
                    2156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2156,
                      "mutability": "mutable",
                      "name": "_stakerTokenBalanceBefore",
                      "nameLocation": "3116:25:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3108:33:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3108:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2164,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2161,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3188:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3180:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2159,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3180:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3180:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2157,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "3156:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3796,
                      "src": "3156:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3108:86:2"
                },
                {
                  "assignments": [
                    2166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2166,
                      "mutability": "mutable",
                      "name": "_totalStakedBefore",
                      "nameLocation": "3212:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3204:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3204:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2170,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2167,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3233:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakedTokensAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "3233:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3204:67:2"
                },
                {
                  "assignments": [
                    2172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2172,
                      "mutability": "mutable",
                      "name": "_stakedTokensBefore",
                      "nameLocation": "3289:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3281:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3281:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2180,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2177,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3359:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3351:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3351:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3351:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2173,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3323:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedTokensOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "3323:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3323:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3281:84:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2184,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "3395:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2181,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3376:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 582,
                      "src": "3376:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3376:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2186,
                  "nodeType": "ExpressionStatement",
                  "src": "3376:27:2"
                },
                {
                  "assignments": [
                    2188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2188,
                      "mutability": "mutable",
                      "name": "_stakerTokenBalanceAfter",
                      "nameLocation": "3422:24:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3414:32:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3414:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2196,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2193,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3493:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3485:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3485:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3485:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2189,
                        "name": "stakableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "3461:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3857",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3796,
                      "src": "3461:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3414:85:2"
                },
                {
                  "assignments": [
                    2198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2198,
                      "mutability": "mutable",
                      "name": "_totalStakedAfter",
                      "nameLocation": "3517:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3509:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3509:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2202,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2199,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3537:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakedTokensAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "3537:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3537:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3509:66:2"
                },
                {
                  "assignments": [
                    2204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2204,
                      "mutability": "mutable",
                      "name": "_stakedTokensAfter",
                      "nameLocation": "3593:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "3585:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3585:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2212,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2209,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3650:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20StakingRewardsDistributionFuzzer_$2245",
                              "typeString": "contract ERC20StakingRewardsDistributionFuzzer"
                            }
                          ],
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3642:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2207,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3642:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3642:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2205,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "3614:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20StakingRewardsDistribution_$1630",
                          "typeString": "contract ERC20StakingRewardsDistribution"
                        }
                      },
                      "id": 2206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakedTokensOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1330,
                      "src": "3614:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3585:71:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2213,
                        "name": "_stakerTokenBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2156,
                        "src": "3723:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2214,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "3751:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3723:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2216,
                      "name": "_stakerTokenBalanceAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2188,
                      "src": "3762:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3723:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2222,
                  "nodeType": "IfStatement",
                  "src": "3719:116:2",
                  "trueBody": {
                    "id": 2221,
                    "nodeType": "Block",
                    "src": "3788:47:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2218,
                            "name": "AssertionFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "3807:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3807:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2220,
                        "nodeType": "EmitStatement",
                        "src": "3802:22:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2223,
                        "name": "_totalStakedBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2166,
                        "src": "3893:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2224,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "3914:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3893:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2226,
                      "name": "_totalStakedAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2198,
                      "src": "3925:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3893:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2232,
                  "nodeType": "IfStatement",
                  "src": "3889:102:2",
                  "trueBody": {
                    "id": 2231,
                    "nodeType": "Block",
                    "src": "3944:47:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2228,
                            "name": "AssertionFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "3963:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3963:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2230,
                        "nodeType": "EmitStatement",
                        "src": "3958:22:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2233,
                        "name": "_stakedTokensBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "4050:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2234,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "4072:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4050:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2236,
                      "name": "_stakedTokensAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2204,
                      "src": "4083:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4050:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2242,
                  "nodeType": "IfStatement",
                  "src": "4046:104:2",
                  "trueBody": {
                    "id": 2241,
                    "nodeType": "Block",
                    "src": "4103:47:2",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2238,
                            "name": "AssertionFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "4122:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4122:17:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2240,
                        "nodeType": "EmitStatement",
                        "src": "4117:22:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 2244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "3068:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3082:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2244,
                  "src": "3074:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:17:2"
            },
            "returnParameters": {
              "id": 2154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3098:0:2"
            },
            "scope": 2245,
            "src": "3059:1097:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2246,
        "src": "1286:14831:2",
        "usedErrors": []
      }
    ],
    "src": "0:16118:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-09-27T09:42:54.276Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}